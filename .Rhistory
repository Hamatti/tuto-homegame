ls
ls()
a <- c(1,2,3)
a
install.packages('shiny')
library(shiny)
runExample('01_hello')
runExample('01_hello')
'042'
\042
\044
\\044
'\044'
'\042'
'\136'
'\305'
get_wd()
wd()
dir
ls()
dir()
data <- read.csv('scripts/statwing-competition/GSS-Data-for-Statwing-Prize.csv')
head(data)
names(data)
data$Citizenship...Demographic.
summary(data$Citizenship...Demographic.)
View(data)
sex <- c('F', 'F', )
sex <- c('F', 'F', 'M', 'M', 'F')
occupation <- c(1, 2, 2, 3, 2, 1, 5)
occupation <- c(1, 2, 2, 3, 2)
df <- as.data.frame(sex=sex, occupation=occupation)
df <- data.frame(sex=sex, occupation=occupation)
df
df[sex=='M']
df[sex=='M',]
nrows(df[sex=='M',])
rows(df[sex=='M',])
nrow(df[sex=='M',])
df <- data.frame( sex = c('M', 'M', 'F', 'F', 'M'), occupation = c('analyst', 'dentist', 'dentist', 'analyst', 'cook') )
df
df[sex == 'M',] # To get all males
df[occupation == 'analyst'] # All analysts
df[sex == 'F' && occupation == 'dentist'] # All female dentists
df[sex == 'M',] # To get all males
df[occupation == 'analyst'] # All analysts
df[occupation == 'analyst',] # All analysts
df[sex == 'F' && occupation == 'dentist',] # All female dentists
df[sex == 'M',] # To get all males
df[sex == 'M',] # To get all males
df[df$sex == 'M',] # To get all males
df[df$occupation == 'analyst',] # All analysts
df[df$sex == 'F' && occupation == 'dentist',] # All female dentists
df
df[df$sex == 'F' && df$occupation == 'dentist',] # All female dentists
nrow(df[df$sex == 'M',])
data<-cbind(c(rep(1,2),rep(2,4),rep(3,4)),c(rep(1:3,3),1),c("A",
"B","A",rep("B",2),"A","A","B","A","A"))
data<-data.frame(data)
colnames(data)<-c("sub","days","cat") ## Changing col names
work<-NULL
for(i in 1:length(data$sub)) {
sand<-subset(data,sub==i)
for (j in 1:length(sand$cat)) {
ifelse(sand$cat[j]=="B",sand$cat[j+1]=="B","A")
}
work<-rbind(work,sand)
}
work
data<-cbind(c(rep(1,2),rep(2,4),rep(3,4)),c(rep(1:3,3),1),c("A",
"B","A",rep("B",2),"A","A","B","A","A"))
data<-data.frame(data)
colnames(data)<-c("sub","days","cat") ## Changing col names
work<-NULL
for(i in 1:length(data$sub)) {
sand<-subset(data,sub==i)
for (j in 1:length(sand$cat)) {
ifelse(sand$cat[j]=="B",sand$cat[j+1]="B","A")
}
work<-rbind(work,sand)
}
library(XML)
URL <- 'http://www.tutohockey.fi/fi/ottelut/otteluohjelma-2014-15'
table <- as.data.frame(readHTMLTable(URL))
table
## Preprocessing - reading the game schedule and writing a csv of the home games
# Dependencies: XML
library(XML)
URL <- 'http://www.tutohockey.fi/fi/ottelut/otteluohjelma-2014-15'
table <- as.data.frame(readHTMLTable(URL))
names(table) <- c('date', 'time', 'place', 'home', 'away')
# Drop the "extra info" column
games <- table[-6]
# Only consider regular season games
games <- games[13:64,]
# Only home games
home_games <- games[games$home == 'TUTO Hockey',]
write.csv(home_games, file="tutohomegames.csv")
ls
ls)=
ls()
dir()
## Preprocessing - reading the game schedule and writing a csv of the home games
# Dependencies: XML
library(XML)
URL <- 'http://www.tutohockey.fi/fi/ottelut/otteluohjelma-2014-15'
table <- as.data.frame(readHTMLTable(URL))
names(table) <- c('date', 'time', 'place', 'home', 'away')
table
games <- table[-6]
table
games <- table[-5]
head(games)
games <- table[,-6]
games
games <- games[,-5]
head(games)
## Preprocessing - reading the game schedule and writing a csv of the home games
# Dependencies: XML
library(XML)
URL <- 'http://www.tutohockey.fi/fi/ottelut/otteluohjelma-2014-15'
table <- as.data.frame(readHTMLTable(URL))
names(table) <- c('date', 'time', 'place', 'home', 'away')
# Drop the "extra info" column
games <- table[-6]
# Only consider regular season games
games <- games[13:64,]
# Only home games
home_games <- games[games$home == 'TUTO Hockey',]
write.csv(home_games, file="tutohomegames.csv")
setwd('/Users/hamatti/scripts/tuto-homegame/')
dir()
source('get_home_games.R')
source('get_home_games.R')
source('get_home_games.R')
